name: Unit Testing and Deployment

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
  push:
    tags:
      - "*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ALLOW_PLOTTING: true
  SHELLOPTS: "errexit:pipefail"

jobs:
  Linux:
    name: Linux Unit Testing
    permissions:
      contents: read
      actions: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          fetch-depth: 2
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          for i in $(cat packages.txt); do sudo apt-get install $i; done

      - name: Install Testing Requirements
        run: |
          pip install -e .[test]

      - name: Unit Testing
        run: |
          export PYTHONPATH=. && xvfb-run python -m pytest -v
